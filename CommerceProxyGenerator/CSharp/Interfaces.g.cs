// <auto-generated />
namespace Contoso.Commerce.RetailProxy.Extension
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.IO;
    using System.Threading.Tasks;
    using Microsoft.Dynamics.Commerce.RetailProxy;

    
    /// <summary>
    /// Interface for Store Operations Manager.
    /// </summary>
    [GeneratedCodeAttribute("Contoso.Commerce.RetailProxy.Extension", "1.0")]
    public interface IStoreOperationsManager : IEntityManager
    {
        
        /// <summary>
        /// OverrideCartLinePrice method.
        /// </summary>
        /// <param name="cartId">The cartId.</param>
        /// <param name="lineId">The lineId.</param>
        /// <param name="newPrice">The newPrice.</param>
        /// <returns>Cart object.</returns>
        Task<Cart> OverrideCartLinePrice(string cartId, string lineId, decimal newPrice);
    
        /// <summary>
        /// SimplePingPost method.
        /// </summary>
        /// <returns>bool object.</returns>
        Task<bool> SimplePingPost();
    
        /// <summary>
        /// GetOnlineShoppingCartList method.
        /// </summary>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of Cart.</returns>
        Task<PagedResult<Cart>> GetOnlineShoppingCartList(QueryResultSettings queryResultSettings = null);
    
        /// <summary>
        /// GetCartById method.
        /// </summary>
        /// <param name="id">The id.</param>
        /// <returns>Cart object.</returns>
        Task<Cart> GetCartById(string id);
    
        /// <summary>
        /// SearchInventoryDocumentLine method.
        /// </summary>
        /// <param name="searchCriteria">The searchCriteria.</param>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of InventoryInboundOutboundDocumentLine.</returns>
        Task<PagedResult<InventoryInboundOutboundDocumentLine>> SearchInventoryDocumentLine(InventoryDocumentLineSearchCriteria searchCriteria, QueryResultSettings queryResultSettings = null);
    
        /// <summary>
        /// SimplePingGet method.
        /// </summary>
        /// <returns>bool object.</returns>
        Task<bool> SimplePingGet();
    
    }
    
    /// <summary>
    /// Interface for ExampleEntity Manager.
    /// </summary>
    [GeneratedCodeAttribute("Contoso.Commerce.RetailProxy.Extension", "1.0")]
    public interface IExampleEntityManager : IEntityManager
    {
        
        /// <summary>
        /// CreateExampleEntity method.
        /// </summary>
        /// <param name="entityData">The entityData.</param>
        /// <returns>long object.</returns>
        Task<long> CreateExampleEntity(ExampleEntity entityData);
    
        /// <summary>
        /// UpdateExampleEntity method.
        /// </summary>
        /// <param name="unusualEntityId">The unusualEntityId.</param>
        /// <param name="updatedEntity">The updatedEntity.</param>
        /// <returns>bool object.</returns>
        Task<bool> UpdateExampleEntity(long unusualEntityId, ExampleEntity updatedEntity);
    
        /// <summary>
        /// DeleteExampleEntity method.
        /// </summary>
        /// <param name="unusualEntityId">The unusualEntityId.</param>
        /// <returns>bool object.</returns>
        Task<bool> DeleteExampleEntity(long unusualEntityId);
    
        /// <summary>
        /// GetAllExampleEntities method.
        /// </summary>
        /// <param name="queryResultSettings">The queryResultSettings.</param>
        /// <returns>Collection of ExampleEntity.</returns>
        Task<PagedResult<ExampleEntity>> GetAllExampleEntities(QueryResultSettings queryResultSettings = null);
    
    }
    
 }
